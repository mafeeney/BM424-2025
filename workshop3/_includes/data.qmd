```{r data, include=FALSE}

library(ggplot2)
library(knitr)
```

### Pandemic Report {.unnumbered}

```{r A0, echo=FALSE}
outbreak_deaths <- floor(runif(1, min = 10, max = 30))
outbreak_cases <- floor(runif(1, min = 400, max = 700))
outbreak_icu <- floor(runif(1, min = 10, max = 30))

```

*Briefing:*

* Based on collated hospital reports and death certificates, it is believed that there have been `r outbreak_deaths` deaths due to `r dis_name` in `r city_name` thus far

* There are currently `r outbreak_cases` patients in the `r hosp_name` with confirmed `r dis_name`, or symptoms consistent with `r dis_name`

* There are currently `r outbreak_icu`  patients currently in the ICU with confirmed `r dis_name`

### City Demographics, Polling, and Budget {.unnumbered}

The current population of `r city_name` (as of December 2022) is `r sample(150000:170000, size=1)`. The demographic data for the city is shown below.

```{r A1, echo=FALSE, fig.cap="City demographics (Source: Office for National Statistics)"}

Pop <- c(sample(150000:170000, size=3, replace=TRUE), sample(170000:180000, size=3, replace=TRUE), sample(190000:170000, size=2, replace=TRUE), sample(150000:170000, size=2, replace=TRUE))
PopYears <- c(2012:2021)
population <- data.frame(Pop, PopYears)
ggplot(data = population, aes(x=PopYears, y=Pop)) + 
  geom_point() +
  geom_line() +
  labs(y = "Number of city residents (estimated)", x = "Year") +
  scale_y_continuous(limits=c(0, 200000)) + 
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())


Demog <- c((rep("Births", 10)), (rep("Deaths", 10)))
Num <- c(sample(1000:2000, size=10, replace=TRUE), sample(500:1500, size=8, replace=TRUE), sample(3000:5500, size=2, replace=TRUE))
DemogYears <- c(rep(2012:2021, 2))
birthdeath <- data.frame(Demog, Num, DemogYears)
ggplot(data = birthdeath, aes(x=DemogYears, y=Num, group=Demog, colour=Demog)) + 
  geom_point() +
  geom_line() +
  labs(y = "Number of births and deaths in the city (estimated)", x = "Year", colour = "Demographics") +
  scale_y_continuous(limits=c(0, 5500)) + 
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + 
  scale_color_discrete(name="")
```

The current provost of `r city_name` was elected in `r sample(2012:2021, size=1)`, as a member of a popular political party who made a number of election promises regarding a "Green New Deal" for `r city_name`.

```{r A2, fig.cap="Voting intention by city residents (Source: YouGov polling)", echo=FALSE}

# Generate random party names
party_names <- sample(c("Progressive Future", "United Workers", "Eco Harmony", 
                        "People's Alliance", "New Horizon", "Community First", 
                        "Renewal Movement", "Green Vision", "Forward Together", 
                        "Liberty League"), 5)

# Create a vector of party assignments
Party <- rep(party_names, each = 13)  # 13 years per party (2012–2024)

# Generate random polling data for each party
Polls <- c(sample(1:3, size=13, replace=TRUE), 
           sample(8:14, size=13, replace=TRUE), 
           sample(15:20, size=13, replace=TRUE), 
           sample(5:10, size=13, replace=TRUE), 
           sample(1:2, size=13, replace=TRUE))

# Generate years from 2012 to 2024 for each party
PolYears <- rep(2012:2024, times = 5)

# Create the data frame
politics <- data.frame(Party, Polls, PolYears)

# Plot the data
ggplot(data = politics, aes(x=PolYears, y=Polls, color=Party)) + 
  geom_point() +
  geom_line() +
  labs(y = "Voting Intention", x = "Year") + 
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())

# Calculate total councillors elected after 2020
Councillors <- sum(politics[politics$PolYears > 2020, "Polls"])

```

There are currently `r Councillors` elected councillors, representing the political parties in `r city_name` as follows:

```{r A3, echo=FALSE}

# Get the most recent year in the dataset
latest_year <- max(politics$PolYears)

# Extract only the most recent year's data
pol2024 <- politics[politics$PolYears == latest_year, "Polls"]

# Add randomness (increase seats by 2 to 10)
pol2024 <- pol2024 + sample(2:10, length(pol2024), replace = TRUE)

# Use the **same** party names from the first code chunk
Parties <- unique(politics$Party)

# Create the data frame
Councillors <- data.frame(Parties, pol2024)

# Format table output
kable(x = Councillors, 
      format = "html", 
      col.names = c("Political Party", "Number of Seats"))

```
<br><br>
The overall budget (expenditures) for the 2023-2024 financial year was £`r sample(400000000:600000000, size=1)`. A summary of expenditures by category for this financial year is shown below. 

```{r A4, fig.cap="Public expenditures by category for the 2023-2024 financial year", echo=FALSE}

# Define the categories
categories <- c("Education", "Industry and Agriculture", "Social Care", 
                "Transport", "Public order and safety", "Healthcare", 
                "Housing", "Other")

# Original values
base_values <- c(13, 7, 9, 5, 7, 21, 8, 2)

# Generate a random increase between 2 and 10 for each category
random_increase <- sample(2:10, length(base_values), replace=TRUE)

# Add the random increase to the base values
new_values <- base_values + random_increase

# Create the data frame
expenses <- data.frame(Category = categories, value = new_values)

# Plot the pie chart
ggplot(expenses, aes(x="", y=value, fill=Category)) +
  geom_bar(stat="identity", width=1, color="white") +
  coord_polar("y", start=0) +
  theme_void()

```

### Hospital and Hospital Budget {.unnumbered}

The annual operating budget for financial year 2022-2023 was £`r round(runif(1, 1, 10), 1)` million, and average expenditures are shown by category in the figure below. 

```{r A5, fig.cap="Hospital expenditures by category for financial year 2023-2024", echo=FALSE}

# Original expense values
expense_values <- c(25, 17, 9, 12)

# Add a small random change (-3 to +3), ensuring values stay above 1
randomized_values <- pmax(expense_values + sample(-3:3, length(expense_values), replace = TRUE), 1)

# Create the data frame
expenses <- data.frame(
  Category = c("Staff costs", "Healthcare expenditures (drugs, supplies, etc.)", 
               "Other supplies", "Other running costs (procurement, IT, HR, etc.)"),
  value = randomized_values
)

# Plot the data
ggplot(expenses, aes(x="", y=value, fill=Category)) +
  geom_bar(stat="identity", width=1, color="white") +
  coord_polar("y", start=0) +
  theme_void()

```
